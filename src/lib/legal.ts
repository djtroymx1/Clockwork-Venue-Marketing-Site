/**
 * Legal & Trademark Configuration
 * Centralized settings and helper functions for branding and legal text.
 */

interface LegalConfig {
  brandName: string;
  trademarkStatus: "TM" | "R";
  showPatentPending: boolean;
  legalOwner: string;
}

export const legalConfig: LegalConfig = {
  brandName: "Clockwork Venue",
  trademarkStatus: "TM", // "TM" for trademark, "R" for registered trademark
  showPatentPending: false,
  legalOwner: "Digital Visionworks LLC",
};

/**
 * Returns the brand name with the appropriate trademark symbol.
 * e.g., "Clockwork Venue(TM)" or "Clockwork Venue(R)"
 */
function brandWithMark(): string {
  const symbol = legalConfig.trademarkStatus === "R" ? "\u00AE" : "\u2122";
  return `${legalConfig.brandName}${symbol}`;
}

/**
 * Returns the current year for copyright notices.
 */
function legalYear(): number {
  return new Date().getFullYear();
}

/**
 * Generates the full legal line for the footer.
 */
function legalLine(): string {
  let line = `\u00A9 ${legalYear()} ${legalConfig.legalOwner}. All rights reserved. ${brandWithMark()} and the ${legalConfig.brandName} logo are trademarks of ${legalConfig.legalOwner}.`;
  if (legalConfig.showPatentPending) {
    line += " Patent pending.";
  }
  return line;
}

/**
 * Generates a watermark for file exports.
 * @param orgName - The name of the organization exporting the data.
 */
function exportWatermark(orgName: string = "Default Org"): string {
  const timestamp = new Date().toISOString();
  return `Generated by ${brandWithMark()} \u2014 stageflowlive.com \u2014 Org: ${orgName} \u2014 ${timestamp}`;
}

// Add functions to the exported object so they can be imported elsewhere
legalConfig.brandWithMark = brandWithMark;
legalConfig.legalYear = legalYear;
legalConfig.legalLine = legalLine;
legalConfig.exportWatermark = exportWatermark;

declare module './legal' {
  interface LegalConfig {
    brandWithMark: () => string;
    legalYear: () => number;
    legalLine: () => string;
    exportWatermark: (orgName?: string) => string;
  }
}
