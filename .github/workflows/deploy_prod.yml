name: Production Deploy (Protected)

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Optional tag or ref to deploy (defaults to main)"
        required: false
  push:
    branches: ["main"]

concurrency:
  group: prod-deploy
  cancel-in-progress: false

jobs:
  # Detect if Functions changed; only deploy them when needed.
  changes:
    runs-on: ubuntu-latest
    outputs:
      functions_changed: ${{ steps.filter.outputs.functions }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            functions:
              - 'functions/**'

  build:
    name: Build & Verify
    runs-on: ubuntu-latest
    needs: changes
    environment: production   # Requires approval in repo settings
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_tag || 'main' }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install deps
        run: |
          pnpm install --frozen-lockfile
          pnpm -C web-ui install --frozen-lockfile

      - name: Typecheck
        run: pnpm -C web-ui typecheck

      - name: Lint
        run: pnpm -C web-ui lint

      - name: Build
        run: pnpm -C web-ui build

      - name: E2E Smoke
        run: pnpm -C web-ui e2e:smoke

  deploy_hosting:
    name: Deploy Hosting (Production)
    runs-on: ubuntu-latest
    needs: build
    environment: production   # still protected; a second approval gate if desired
    permissions:
      contents: read
    env:
      FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      FIREBASE_SITE: ${{ vars.FIREBASE_SITE }}
      FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_tag || 'main' }}

      - name: Firebase Deploy (Hosting)
        id: hosting_prod
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ env.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          target: ${{ env.FIREBASE_SITE }}
          channelId: live

  deploy_functions:
    name: Deploy Functions (Only if changed)
    runs-on: ubuntu-latest
    needs: [changes, build]
    if: needs.changes.outputs.functions_changed == 'true'
    environment: production
    permissions:
      contents: read
    env:
      FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.release_tag || 'main' }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Functions deps
        working-directory: functions
        run: npm ci

      - name: Deploy Functions (prod)
        run: |
          npx firebase-tools deploy --only functions \
            --project ${{ env.FIREBASE_PROJECT_ID }} \
            --token "$(jq -r '.private_key' <<< '${{ env.FIREBASE_SERVICE_ACCOUNT }}' >/dev/null 2>&1 || echo '')"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ""
          FIREBASE_SERVICE_ACCOUNT: ${{ env.FIREBASE_SERVICE_ACCOUNT }}

  summary:
    name: Post-deploy Summary
    runs-on: ubuntu-latest
    needs: [deploy_hosting, deploy_functions]
    if: always()
    steps:
      - name: Print summary & rollback hint
        run: |
          echo "✅ Production deploy completed (see job statuses above)."
          echo ""
          echo "Rollback (Hosting):"
          echo "  - In Firebase Console → Hosting → 'View releases' → 'Rollback' to prior version."
          echo "  - Or CLI: firebase hosting:rollback --project \$FIREBASE_PROJECT_ID"
          echo ""
          echo "Rollback (Functions):"
          echo "  - Re-deploy a previous commit/tag:"
          echo "    git checkout <good_tag_or_commit> && npx firebase-tools deploy --only functions --project \$FIREBASE_PROJECT_ID"
